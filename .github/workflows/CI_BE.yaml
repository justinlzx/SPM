name: Backend CI

on:
#   workflow_dispatch:  # This can be triggered manually, or you can uncomment the 'push' or 'pull_request' if needed!
# #   push:
# #     branches:
# #       - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      working-directory: backend

    - name: Ensure backend .env exists
      run: |
        if [ ! -f "backend/.env" ]; then
          echo "Creating .env file..."
          touch backend/.env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> backend/.env
          echo "AWS_S3_BUCKET_NAME=${{ secrets.AWS_S3_BUCKET_NAME }}" >> backend/.env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> backend/.env
          echo "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}" >> backend/.env
          echo "SMTP_USERNAME=${{ secrets.SMTP_USERNAME }}" >> backend/.env
          echo "TOKEN_SECRET=${{ secrets.TOKEN_SECRET }}" >> backend/.env
          echo "ENV=${{ vars.ENV}}" >> backend/.env
          echo "FRONTEND_URL=${{ vars.FRONTEND_URL}}" >> backend/.env
          echo "SMTP_PORT=${{ vars.SMTP_PORT}}" >> backend/.env
          echo "SMTP_SERVER=${{ vars.SMTP_SERVER}}" >> backend/.env
        fi

    - name: Install pre-commit
      run: pip install pre-commit
      working-directory: backend

      # Runs linting, black, sorter and docformatter!
    - name: Run pre-commit hooks
      run: pre-commit run --all-files
      working-directory: .

    - name: Run tests with coverage
      run: |
        pip install pytest pytest-cov  # Ensure pytest-cov is installed
        pytest --cov=backend/src --cov-report=term-missing --cov-report=html src/tests
      working-directory: backend

    # - name: Check code formatting
    #   run: |
    #     # Assuming you use black for code formatting
    #     pip install black
    #     black --check backend
    #   working-directory: backend

    # - name: Lint code
    #   run: |
    #     # Assuming you use flake8 for linting
    #     pip install flake8
    #     flake8 backend
    #   working-directory: backend
