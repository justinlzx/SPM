name: Frontend CI

on:
#   push:
#     branches:
#       - main
  pull_request:
    branches:
      - main
    # workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
    
    - name: Cache Node modules
      uses: actions/cache@v3
      with:
        path: frontend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: |
        npm install
        npm install eslint --save-dev
        npm install @typescript-eslint/parser @typescript-eslint/eslint-plugin --save-dev
      working-directory: frontend

    - name: Create ESLint config if not exists
      run: |
        if [ ! -f .eslintrc.js ] && [ ! -f .eslintrc.json ] && [ ! -f .eslintrc.yaml ]; then
          echo '{
            "env": {
                "browser": true,
                "es2021": true
            },
            "extends": [
                "eslint:recommended"
            ],
            "parserOptions": {
                "ecmaVersion": "latest",
                "sourceType": "module"
            }
          }' > .eslintrc.json
        fi
      working-directory: frontend

    - name: Run ESLint
      run: |
        npx eslint . --ext .js, .jsx, .ts, .tsx
      working-directory: frontend

    - name: Run tests
      run: npm test
      working-directory: frontend

    - name: Build project
      run: npm run build
      working-directory: frontend
